{"version":3,"sources":["TodoItem.js","TodoFooter.js","App.js","index.js"],"names":["TodoItem","props","useState","editText","setEditText","inputRef","useRef","handleSubmit","event","value","trim","onSave","onDestroy","todo","className","completed","editing","type","checked","onChange","onToggle","onDoubleClick","onEdit","title","ref","onBlur","target","handleChange","onKeyDown","which","onCancel","handleKeyDown","TodoFooter","clearButton","ACTIVE_TODOS","COMPLETED_TODOS","changeShow","preventDefault","onChnageShowing","completedCount","onClick","onClearCompleted","count","nowShowing","href","App","main","footer","newTodo","setNewTodo","todos","setTodos","setEditing","setNowShowing","setNewTodos","newTodos","localStorage","setItem","JSON","stringify","useEffect","todoData","getItem","parse","todoItems","filter","this","map","id","targetItem","array","targetTodo","find","toggleCheckBox","edit","titleValue","save","destroy","activeTodoCount","reduce","accum","length","changeShowing","toggleAllCheckBox","htmlFor","placeholder","keyCode","handleNewTodoKeyDown","inputTextChange","autoFocus","rootElement","document","getElementsByClassName","createRoot","render"],"mappings":"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","file":"static/js/main.829ccce9.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\r\n\r\nexport default function TodoItem(props) {\r\n  const [editText, setEditText] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n  var ESCAPE_KEY = 27;\r\n  var ENTER_KEY = 13;\r\n\r\n  function handleEdit() {\r\n    props.onEdit(props.todo);\r\n    setEditText(props.todo.title);\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    var value = editText.trim();\r\n    if (value) {\r\n      props.onSave(value);\r\n      setEditText(value);\r\n    } else {\r\n      props.onDestroy(props.todo);\r\n    }\r\n  }\r\n  function handleKeyDown(event) {\r\n    if (event.which === ESCAPE_KEY) {\r\n      setEditText(props.todo.title);\r\n      props.onCancel();\r\n    } else if (event.which === ENTER_KEY) {\r\n      handleSubmit(event);\r\n    }\r\n  }\r\n  function handleChange(event) {\r\n    if (props.editing) {\r\n      setEditText(event.target.value);\r\n    }\r\n  }\r\n  return (\r\n    <li\r\n      className={\r\n        (props.todo.completed ? \"completed \" : \" \") +\r\n        (props.editing ? \"editing\" : \" \")\r\n      }\r\n    >\r\n      <div className=\"view\">\r\n        <input\r\n          className=\"toggle\"\r\n          type=\"checkbox\"\r\n          checked={props.todo.completed}\r\n          onChange={(event) => props.onToggle(event, props.todo)}\r\n        />\r\n        <label onDoubleClick={() => handleEdit()}>{props.todo.title}</label>\r\n        <button className=\"destroy\" />\r\n      </div>\r\n      <input\r\n        ref={inputRef}\r\n        value={editText}\r\n        onBlur={(event) => handleSubmit(event)}\r\n        onChange={(event) => handleChange(event)}\r\n        onKeyDown={(event) => handleKeyDown(event)}\r\n        type=\"text\"\r\n        className=\"edit\"\r\n      />\r\n    </li>\r\n  );\r\n}\r\n","export default function TodoFooter(props) {\r\n  var clearButton = null;\r\n  var ALL_TODOS = \"all\";\r\n  var ACTIVE_TODOS = \"active\";\r\n  var COMPLETED_TODOS = \"completed\";\r\n  if (props.completedCount > 0) {\r\n    clearButton = (\r\n      <button className=\"clear-completed\" onClick={props.onClearCompleted}>\r\n        Clear completed\r\n      </button>\r\n    );\r\n  }\r\n\r\n  function changeShow(event, value) {\r\n    event.preventDefault();\r\n    props.onChnageShowing(value);\r\n  }\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <span className=\"todo-count\">\r\n        <strong>{props.count}</strong> left\r\n      </span>\r\n      <ul className=\"filters\">\r\n        <li>\r\n          <a\r\n            className={props.nowShowing === ALL_TODOS ? \"selected\" : \"\"}\r\n            onClick={(event) => changeShow(event, ALL_TODOS)}\r\n            href=\"#/\"\r\n          >\r\n            All\r\n          </a>\r\n        </li>{\" \"}\r\n        <li>\r\n          <a\r\n            className={props.nowShowing === ACTIVE_TODOS ? \"selected\" : \"\"}\r\n            onClick={(event) => changeShow(event, ACTIVE_TODOS)}\r\n            href=\"#/\"\r\n          >\r\n            Active\r\n          </a>\r\n        </li>{\" \"}\r\n        <li>\r\n          <a\r\n            className={props.nowShowing === COMPLETED_TODOS ? \"selected\" : \"\"}\r\n            onClick={(event) => changeShow(event, COMPLETED_TODOS)}\r\n            href=\"#/\"\r\n          >\r\n            Completed\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      {clearButton}\r\n    </footer>\r\n  );\r\n}\r\n","import \"./main.css\";\nimport TodoItem from \"./TodoItem\";\nimport TodoFooter from \"./TodoFooter\";\nimport React, { useState, useEffect } from \"react\";\n\nexport default function App(props) {\n  var main;\n  var footer;\n  var ALL_TODOS = \"all\";\n  var ACTIVE_TODOS = \"active\";\n  var COMPLETED_TODOS = \"completed\";\n  var ENTER_KEY = 13;\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [editing, setEditing] = useState(null);\n  const [nowShowing, setNowShowing] = useState(ALL_TODOS);\n\n  useEffect(() => {\n    const todoData = localStorage.getItem(\"todoList\");\n    if (todoData) {\n      setTodos(JSON.parse(todoData));\n    }\n  }, []);\n\n  function changeShowing(value) {\n    setNowShowing(value);\n  }\n\n  function toggleAllCheckBox(event) {\n    var checked = event.target.checked;\n    var array = [...todos];\n    array.map((todo) => (todo.completed = checked));\n    setNewTodos(array);\n  }\n  function toggleCheckBox(event, targetItem) {\n    const array = [...todos];\n    const targetTodo = array.find((todo) => todo.id === targetItem.id);\n    targetTodo.completed = !targetTodo.completed;\n    setNewTodos(array);\n  }\n  function save(titleValue) {\n    const array = [...todos];\n    const targetTodo = array.find((todo) => todo.id === editing);\n    if (targetTodo) {\n      targetTodo.title = titleValue;\n      setNewTodos(array);\n    }\n    setEditing(null);\n  }\n  function edit(targetItem) {\n    setEditing(targetItem.id);\n  }\n\n  function cancel() {\n    setEditing(null);\n  }\n  function destroy(targetItem) {\n    var array = [...todos];\n    array = array.filter((todo) => todo !== targetItem);\n    setNewTodos(array);\n  }\n\n  function handleNewTodoKeyDown(event) {\n    if (event.keyCode !== ENTER_KEY) {\n      return;\n    }\n    event.preventDefault();\n\n    var value = newTodo.trim();\n\n    if (value) {\n      let newTodos = [\n        ...todos,\n        { id: todos.length + 1, title: newTodo, completed: false }\n      ];\n      setNewTodos(newTodos);\n      setNewTodo(\"\");\n    }\n  }\n\n  function inputTextChange(event) {\n    setNewTodo(event.target.value);\n  }\n\n  function clearCompleted() {\n    var array = todos.filter((todo) => !todo.completed);\n    setNewTodos(array);\n  }\n\n  function setNewTodos(newTodos) {\n    setTodos(newTodos);\n    localStorage.setItem(\"todoList\", JSON.stringify(newTodos));\n  }\n\n  var shownTodos = todos.filter(function (todo) {\n    switch (nowShowing) {\n      case ACTIVE_TODOS:\n        return !todo.completed;\n      case COMPLETED_TODOS:\n        return todo.completed;\n      default:\n        return true;\n    }\n  }, this);\n\n  var todoItems = shownTodos.map(function (todo) {\n    return (\n      <TodoItem\n        key={todo.id}\n        todo={todo}\n        editing={editing === todo.id}\n        onToggle={(event, targetItem) => toggleCheckBox(event, targetItem)}\n        onEdit={(targetItem) => edit(targetItem)}\n        onSave={(value) => save(value)}\n        onCancel={() => cancel()}\n        onDestroy={(targetItem) => destroy(targetItem)}\n      />\n    );\n  }, this);\n\n  var activeTodoCount = todos.reduce(function (accum, todo) {\n    return todo.completed ? accum : accum + 1;\n  }, 0);\n  var completedCount = todos.length - activeTodoCount;\n\n  if (activeTodoCount || completedCount) {\n    footer = (\n      <TodoFooter\n        count={activeTodoCount}\n        completedCount={completedCount}\n        nowShowing={nowShowing}\n        onChnageShowing={(value) => changeShowing(value)}\n        onClearCompleted={() => clearCompleted()}\n      />\n    );\n  }\n\n  if (todos.length) {\n    main = (\n      <section className=\"main\">\n        <input\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          type=\"checkbox\"\n          onChange={(event) => toggleAllCheckBox(event)}\n          checked={activeTodoCount === 0}\n        />\n        <label htmlFor=\"toggle-all\" />\n        <ul className=\"todo-list\">{todoItems}</ul>\n      </section>\n    );\n  }\n\n  return (\n    <div>\n      <header className=\"header\">\n        <h1>todos</h1>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={newTodo}\n          onKeyDown={(event) => handleNewTodoKeyDown(event)}\n          onChange={(event) => inputTextChange(event)}\n          autoFocus={true}\n        />\n      </header>\n      {main}\n      {footer}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementsByClassName(\"todoapp\")[0];\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}